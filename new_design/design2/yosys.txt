Finding unused cells or wires in module \if_id..
Finding unused cells or wires in module \imm_gen..
Finding unused cells or wires in module \mem_wb..
Finding unused cells or wires in module \mux2to1..
Finding unused cells or wires in module \program_counter..
Finding unused cells or wires in module \regfile..
Finding unused cells or wires in module \sign_mask_gen..
Finding unused cells or wires in module \top..

18.35.12. Finished OPT passes. (There is nothing left to do.)

18.36. Executing TECHMAP pass (map to technology primitives).

18.36.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/latches_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/latches_map.v' to AST representation.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Successfully finished Verilog frontend.

18.36.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~4 debug messages>

18.37. Executing ABC pass (technology mapping using ABC).

18.37.1. Extracting gate netlist of module `\ALUControl' to `<abc-temp-dir>/input.blif'..
Extracted 167 gates and 179 wires to a netlist network with 11 inputs and 7 outputs.

18.37.1.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      20.
ABC: Participating nodes from both networks       =      56.
ABC: Participating nodes from the first network   =      19. (  52.78 % of nodes)
ABC: Participating nodes from the second network  =      37. ( 102.78 % of nodes)
ABC: Node pairs (any polarity)                    =      19. (  52.78 % of names can be moved)
ABC: Node pairs (same polarity)                   =      13. (  36.11 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.1.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       35
ABC RESULTS:        internal signals:      161
ABC RESULTS:           input signals:       11
ABC RESULTS:          output signals:        7
Removing temp directory.

18.37.2. Extracting gate netlist of module `\ForwardingUnit' to `<abc-temp-dir>/input.blif'..
Extracted 143 gates and 203 wires to a netlist network with 60 inputs and 4 outputs.

18.37.2.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      15.
ABC: Participating nodes from both networks       =      28.
ABC: Participating nodes from the first network   =      14. (  22.95 % of nodes)
ABC: Participating nodes from the second network  =      14. (  22.95 % of nodes)
ABC: Node pairs (any polarity)                    =      14. (  22.95 % of names can be moved)
ABC: Node pairs (same polarity)                   =       6. (   9.84 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.2.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       60
ABC RESULTS:        internal signals:      139
ABC RESULTS:           input signals:       60
ABC RESULTS:          output signals:        4
Removing temp directory.

18.37.3. Extracting gate netlist of module `\adder' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.4. Extracting gate netlist of module `\alu' to `<abc-temp-dir>/input.blif'..
Extracted 1340 gates and 1480 wires to a netlist network with 139 inputs and 65 outputs.

18.37.4.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     299.
ABC: Participating nodes from both networks       =     645.
ABC: Participating nodes from the first network   =     298. (  52.01 % of nodes)
ABC: Participating nodes from the second network  =     347. (  60.56 % of nodes)
ABC: Node pairs (any polarity)                    =     298. (  52.01 % of names can be moved)
ABC: Node pairs (same polarity)                   =     114. (  19.90 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.4.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      572
ABC RESULTS:        internal signals:     1276
ABC RESULTS:           input signals:      139
ABC RESULTS:          output signals:       65
Removing temp directory.

18.37.5. Extracting gate netlist of module `\branch_decision' to `<abc-temp-dir>/input.blif'..
Extracted 6 gates and 10 wires to a netlist network with 4 inputs and 3 outputs.

18.37.5.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       7.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       4. ( 100.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.5.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        3
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

18.37.6. Extracting gate netlist of module `\branch_predictor' to `<abc-temp-dir>/input.blif'..
Extracted 11 gates and 15 wires to a netlist network with 4 inputs and 3 outputs.

18.37.6.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       6.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       3. (  75.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.6.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        8
ABC RESULTS:           input signals:        4
ABC RESULTS:          output signals:        3
Removing temp directory.

18.37.7. Extracting gate netlist of module `\cache' to `<abc-temp-dir>/input.blif'..
Extracted 761 gates and 880 wires to a netlist network with 117 inputs and 103 outputs.

18.37.7.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =     197.
ABC: Participating nodes from both networks       =     419.
ABC: Participating nodes from the first network   =     198. (  49.25 % of nodes)
ABC: Participating nodes from the second network  =     221. (  54.98 % of nodes)
ABC: Node pairs (any polarity)                    =     198. (  49.25 % of names can be moved)
ABC: Node pairs (same polarity)                   =     142. (  35.32 % of names can be moved)
ABC: Total runtime =     0.02 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.7.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:      401
ABC RESULTS:        internal signals:      660
ABC RESULTS:           input signals:      117
ABC RESULTS:          output signals:      103
Removing temp directory.

18.37.8. Extracting gate netlist of module `\control' to `<abc-temp-dir>/input.blif'..
Extracted 36 gates and 43 wires to a netlist network with 7 inputs and 12 outputs.

18.37.8.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      13.
ABC: Participating nodes from both networks       =      24.
ABC: Participating nodes from the first network   =      12. (  85.71 % of nodes)
ABC: Participating nodes from the second network  =      12. (  85.71 % of nodes)
ABC: Node pairs (any polarity)                    =      12. (  85.71 % of names can be moved)
ABC: Node pairs (same polarity)                   =      12. (  85.71 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.8.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       13
ABC RESULTS:        internal signals:       24
ABC RESULTS:           input signals:        7
ABC RESULTS:          output signals:       12
Removing temp directory.

18.37.9. Extracting gate netlist of module `\cpu_v2' to `<abc-temp-dir>/input.blif'..
Extracted 5 gates and 11 wires to a netlist network with 6 inputs and 3 outputs.

18.37.9.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =       4.
ABC: Participating nodes from both networks       =       6.
ABC: Participating nodes from the first network   =       3. (  75.00 % of nodes)
ABC: Participating nodes from the second network  =       3. (  75.00 % of nodes)
ABC: Node pairs (any polarity)                    =       3. (  75.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       3. (  75.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.9.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        3
ABC RESULTS:        internal signals:        2
ABC RESULTS:           input signals:        6
ABC RESULTS:          output signals:        3
Removing temp directory.

18.37.10. Extracting gate netlist of module `\csr_file' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.11. Extracting gate netlist of module `\ex_mem' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.12. Extracting gate netlist of module `\id_ex' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.13. Extracting gate netlist of module `\if_id' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.14. Extracting gate netlist of module `\imm_gen' to `<abc-temp-dir>/input.blif'..
Extracted 231 gates and 260 wires to a netlist network with 29 inputs and 31 outputs.

18.37.14.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      48.
ABC: Participating nodes from both networks       =      95.
ABC: Participating nodes from the first network   =      47. (  88.68 % of nodes)
ABC: Participating nodes from the second network  =      48. (  90.57 % of nodes)
ABC: Node pairs (any polarity)                    =      47. (  88.68 % of names can be moved)
ABC: Node pairs (same polarity)                   =      46. (  86.79 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.14.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       52
ABC RESULTS:        internal signals:      200
ABC RESULTS:           input signals:       29
ABC RESULTS:          output signals:       31
Removing temp directory.

18.37.15. Extracting gate netlist of module `\mem_wb' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.16. Extracting gate netlist of module `\mux2to1' to `<abc-temp-dir>/input.blif'..
Extracted 32 gates and 97 wires to a netlist network with 65 inputs and 32 outputs.

18.37.16.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      33.
ABC: Participating nodes from both networks       =      64.
ABC: Participating nodes from the first network   =      32. (  96.97 % of nodes)
ABC: Participating nodes from the second network  =      32. (  96.97 % of nodes)
ABC: Node pairs (any polarity)                    =      32. (  96.97 % of names can be moved)
ABC: Node pairs (same polarity)                   =      32. (  96.97 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.16.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       32
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       32
Removing temp directory.

18.37.17. Extracting gate netlist of module `\program_counter' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

18.37.18. Extracting gate netlist of module `\regfile' to `<abc-temp-dir>/input.blif'..
Extracted 98 gates and 216 wires to a netlist network with 118 inputs and 66 outputs.

18.37.18.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =      69.
ABC: Participating nodes from both networks       =     138.
ABC: Participating nodes from the first network   =      69. (  84.15 % of nodes)
ABC: Participating nodes from the second network  =      69. (  84.15 % of nodes)
ABC: Node pairs (any polarity)                    =      69. (  84.15 % of names can be moved)
ABC: Node pairs (same polarity)                   =      67. (  81.71 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.18.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:       81
ABC RESULTS:        internal signals:       32
ABC RESULTS:           input signals:      118
ABC RESULTS:          output signals:       66
Removing temp directory.

18.37.19. Extracting gate netlist of module `\sign_mask_gen' to `<abc-temp-dir>/input.blif'..
Extracted 13 gates and 16 wires to a netlist network with 3 inputs and 4 outputs.

18.37.19.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =       5.
ABC: Participating nodes from both networks       =      11.
ABC: Participating nodes from the first network   =       4. (  80.00 % of nodes)
ABC: Participating nodes from the second network  =       7. ( 140.00 % of nodes)
ABC: Node pairs (any polarity)                    =       4. (  80.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       4. (  80.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.19.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        4
ABC RESULTS:        internal signals:        9
ABC RESULTS:           input signals:        3
ABC RESULTS:          output signals:        4
Removing temp directory.

18.37.20. Extracting gate netlist of module `\top' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 3 wires to a netlist network with 2 inputs and 1 outputs.

18.37.20.1. Executing ABC.
Running ABC command: <yosys-exe-dir>/yosys-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC:
ABC: + read_blif <abc-temp-dir>/input.blif
ABC: + read_lut <abc-temp-dir>/lutdefs.txt
ABC: + strash
ABC: + ifraig
ABC: + scorr
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2
ABC: + dretime
ABC: + strash
ABC: + dch -f
ABC: + if
ABC: + mfs2
ABC: + lutpack -S 1
ABC: + dress
ABC: Total number of equiv classes                =       2.
ABC: Participating nodes from both networks       =       2.
ABC: Participating nodes from the first network   =       1. (  50.00 % of nodes)
ABC: Participating nodes from the second network  =       1. (  50.00 % of nodes)
ABC: Node pairs (any polarity)                    =       1. (  50.00 % of names can be moved)
ABC: Node pairs (same polarity)                   =       1. (  50.00 % of names can be moved)
ABC: Total runtime =     0.00 sec
ABC: + write_blif <abc-temp-dir>/output.blif

18.37.20.2. Re-integrating ABC results.
ABC RESULTS:              $lut cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

18.38. Executing ICE40_WRAPCARRY pass (wrap carries).

18.39. Executing TECHMAP pass (map to technology primitives).

18.39.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/ff_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/ff_map.v' to AST representation.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Successfully finished Verilog frontend.

18.39.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~22 debug messages>
Removed 34 unused cells and 1459 unused wires.

18.40. Executing OPT_LUT pass (optimize LUTs).
Discovering LUTs.
Number of LUTs:       35
  2-LUT                6
  3-LUT               12
  4-LUT               17

Eliminating LUTs.
Number of LUTs:       35
  2-LUT                6
  3-LUT               12
  4-LUT               17

Combining LUTs.
Number of LUTs:       35
  2-LUT                6
  3-LUT               12
  4-LUT               17
Discovering LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47

Eliminating LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47

Combining LUTs.
Number of LUTs:       60
  2-LUT                5
  3-LUT                8
  4-LUT               47
Discovering LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31

Eliminating LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31

Combining LUTs.
Number of LUTs:       32
  2-LUT                1
  3-LUT               31
Discovering LUTs.
Number of LUTs:      637
  1-LUT               32
  2-LUT               42
  3-LUT              263
  4-LUT              300

Eliminating LUTs.
Number of LUTs:      637
  1-LUT               32
  2-LUT               42
  3-LUT              263
  4-LUT              300

Combining LUTs.
Number of LUTs:      629
  1-LUT               32
  2-LUT               35
  3-LUT              254
  4-LUT              308
Discovering LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1

Eliminating LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1

Combining LUTs.
Number of LUTs:        3
  2-LUT                1
  3-LUT                1
  4-LUT                1
Discovering LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33

Eliminating LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33

Combining LUTs.
Number of LUTs:       35
  2-LUT                2
  3-LUT               33
Discovering LUTs.
Number of LUTs:      399
  1-LUT                1
  2-LUT               48
  3-LUT               78
  4-LUT              272

Eliminating LUTs.
Number of LUTs:      399
  1-LUT                1
  2-LUT               48
  3-LUT               78
  4-LUT              272

Combining LUTs.
Number of LUTs:      399
  1-LUT                1
  2-LUT               48
  3-LUT               78
  4-LUT              272
Discovering LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5

Eliminating LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5

Combining LUTs.
Number of LUTs:       13
  2-LUT                4
  3-LUT                4
  4-LUT                5
Discovering LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1

Eliminating LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1

Combining LUTs.
Number of LUTs:        3
  2-LUT                2
  4-LUT                1
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20

Eliminating LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20

Combining LUTs.
Number of LUTs:       52
  2-LUT               19
  3-LUT               13
  4-LUT               20
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       32
  3-LUT               32

Eliminating LUTs.
Number of LUTs:       32
  3-LUT               32

Combining LUTs.
Number of LUTs:       32
  3-LUT               32
Discovering LUTs.
Number of LUTs:        0

Eliminating LUTs.
Number of LUTs:        0

Combining LUTs.
Number of LUTs:        0
Discovering LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73

Eliminating LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73

Combining LUTs.
Number of LUTs:       81
  1-LUT                1
  2-LUT                3
  3-LUT                4
  4-LUT               73
Discovering LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3

Eliminating LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3

Combining LUTs.
Number of LUTs:        4
  1-LUT                1
  2-LUT                3
Discovering LUTs.
Number of LUTs:        1
  2-LUT                1

Eliminating LUTs.
Number of LUTs:        1
  2-LUT                1

Combining LUTs.
Number of LUTs:        1
  2-LUT                1

Eliminated 0 LUTs.
Combined 8 LUTs.
<suppressed ~8169 debug messages>

18.41. Executing TECHMAP pass (map to technology primitives).

18.41.1. Executing Verilog-2005 frontend: /usr/local/bin/../share/yosys/ice40/cells_map.v
Parsing Verilog input from `/usr/local/bin/../share/yosys/ice40/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Successfully finished Verilog frontend.

18.41.2. Continuing TECHMAP pass.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000001\LUT=2'01 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0110 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0111 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000001 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'0001 for cells of type $lut.
Using template $paramod$43779580bfffd5d5a9f321249a174febf1dac288\$lut for cells of type $lut.
Using template $paramod$bba54c1ef87367812b4c15f4aed5ac70773df775\$lut for cells of type $lut.
Using template $paramod$ba05b8a1a425003df083aea0e69541f5cbdc68f2\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10110000 for cells of type $lut.
Using template $paramod$df196ed0a1da5c4a58c5e08a1dac304fd3fccaab\$lut for cells of type $lut.
Using template $paramod$aff3a645bb9f572421a4f0f49cf8987ceb4bcdc5\$lut for cells of type $lut.
Using template $paramod$658b9ed803f0d3d335616d3858b53e0a2522f1e8\$lut for cells of type $lut.
Using template $paramod$6d6beead1425af15cf78b27fd9b11b41b5d4bce8\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01110000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11001010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10101100 for cells of type $lut.
Using template $paramod$571404c0889eaf57f492cb5e37f8acb5df5852f9\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00010000 for cells of type $lut.
Using template $paramod$935a01ed0eaf9ce11b7629fed4b1953d25a675a3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01001111 for cells of type $lut.
Using template $paramod$5c32c59025c0b98f20e63f249d83e7ebb4b085e3\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1000 for cells of type $lut.
Using template $paramod$e49f6e3576ef1a6d2f58c54414dbb786af8cc869\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000010\LUT=4'1011 for cells of type $lut.
Using template $paramod$53ce561f80f32d4298a3beadc88b6c5c78293221\$lut for cells of type $lut.
Using template $paramod$27e055a7872816fe163e4d34b0c5cc10c654c47d\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11111000 for cells of type $lut.
Using template $paramod$a3cdc1eb771a2c6a16f64da161e11100ac409d2b\$lut for cells of type $lut.
Using template $paramod$359fe4e746656bf9c72aecaff84fc7bdea9f55a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00011111 for cells of type $lut.
Using template $paramod$6e238df02989b317f10820a22773676e71120644\$lut for cells of type $lut.
Using template $paramod$272652f6c6fbe9a75eff76e45cc7e2788835518b\$lut for cells of type $lut.
Using template $paramod$e9c77024ca501b890c641f9c0b10e27242db8730\$lut for cells of type $lut.
Using template $paramod$973818279bc95792902f3c09371fd2407d04a2a5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01010011 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11000010 for cells of type $lut.
Using template $paramod$11ec7271d8e6e5aeaace08c13e4c601f10e31038\$lut for cells of type $lut.
Using template $paramod$8cc1d9190eee0e7f03980e56a6daf286bc7b3911\$lut for cells of type $lut.
Using template $paramod$41326ad8644342a66dfb051d050f2b6fbf15015b\$lut for cells of type $lut.
Using template $paramod$38a207c707820f72f67386d2619ee46ee88964f9\$lut for cells of type $lut.
Using template $paramod$9ce83c401f07863ef6c07aa36141bf86d010bac8\$lut for cells of type $lut.
Using template $paramod$69c5b0b7dcfc40353cc3c906564bf7fc71b56aa9\$lut for cells of type $lut.
Using template $paramod$df0b68f8e63b2deb6710e23abd8b8ff0796d4897\$lut for cells of type $lut.
Using template $paramod$c600b4b1adc22857e1c1ba3b6aeb516fabe09da0\$lut for cells of type $lut.
Using template $paramod$e053a22d78e6bd5ea33183ea69976f0db741be0e\$lut for cells of type $lut.
Using template $paramod$bf60f6ec407ee294958b6566514fc3125ec42258\$lut for cells of type $lut.
Using template $paramod$75737fd73bd465c937d4c93ba1e136127f7725c2\$lut for cells of type $lut.
Using template $paramod$756525f2419dda52bc65b69836b80c5eac092f6c\$lut for cells of type $lut.
Using template $paramod$bb07aa4c6c95211b927837b9073769ffabb3aaa5\$lut for cells of type $lut.
Using template $paramod$3f303fcb83bf91508d655fd562fd9a9360d6edcc\$lut for cells of type $lut.
Using template $paramod$9e45b1a8f5d89c07bcbb75a2bb1c598231b04feb\$lut for cells of type $lut.
Using template $paramod$b93d1ea7a612a32c185108f67a153d44ffb9aac2\$lut for cells of type $lut.
Using template $paramod$1bf62ab10e48d71d6497bccacf5c70420c470fe9\$lut for cells of type $lut.
Using template $paramod$de3d8c0ac9a85f776878d56395b6e0bf04ae72e7\$lut for cells of type $lut.
Using template $paramod$bdb7f9ed72fd4f5c7ad81c376f2d8a5c72a0098d\$lut for cells of type $lut.
Using template $paramod$e5759512db67494ff77fbdfc66dff4006376568f\$lut for cells of type $lut.
Using template $paramod$240307bbace6557f3d46ac64c87ca4d697801fc3\$lut for cells of type $lut.
Using template $paramod$1a665bce08550049c89df5b727767baec326afab\$lut for cells of type $lut.
Using template $paramod$a4df2b5be2b644499880e088a11556935f22b401\$lut for cells of type $lut.
Using template $paramod$1ec81da0e720003a6a357a0b44d35a0a30c2cf3d\$lut for cells of type $lut.
Using template $paramod$314fe9458b07176c4d2c8c59533027c4c55155b5\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00000111 for cells of type $lut.
Using template $paramod$654965048f05d54a2fe725c814e06d686f938928\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00111010 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10010000 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100001 for cells of type $lut.
Using template $paramod$1e31fb92b744e0be899c6b430206eeb3d9bfb5cb\$lut for cells of type $lut.
Using template $paramod$bb3d8800f05a14af916c1cc27c67476c7c9509f0\$lut for cells of type $lut.
Using template $paramod$da396db60304c79ae2aea1496dfb7c21aeba5247\$lut for cells of type $lut.
Using template $paramod$b637cf4714c2e93484bb499728e176a6ab69c910\$lut for cells of type $lut.
Using template $paramod$a670b08a47dd8a34f954c50cd06e9996d77e8467\$lut for cells of type $lut.
Using template $paramod$8379cb6cc067198df3735466802bba2672d8d35f\$lut for cells of type $lut.
Using template $paramod$6670a36b94f74e3dc16730dc89a72f15f791db9e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001011 for cells of type $lut.
Using template $paramod$78d44c2843fbba3ee4b0db1335aab21c13e3694e\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001101 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010000 for cells of type $lut.
Using template $paramod$c5b694ec89d7629b942ccf6a9be1d39e24f8edec\$lut for cells of type $lut.
Using template $paramod$b297295e19b03521716155b85537bbe86d6a9ae6\$lut for cells of type $lut.
Using template $paramod$575b200168b9e109c2ed99df4359056f2c6696ac\$lut for cells of type $lut.
Using template $paramod$9583ab40db57ba76ead4c869be5b61dc3f252411\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10000000 for cells of type $lut.
Using template $paramod$c4c148354f86d2131dbfed31e2e01cbbb5aefda7\$lut for cells of type $lut.
Using template $paramod$f3e1547c4b47e64c590e75cf09078b2507c8cc75\$lut for cells of type $lut.
Using template $paramod$722bfd9af0ae56ca9d1d12a221cb5ede16461f26\$lut for cells of type $lut.
Using template $paramod$6b0849254d6c87461fb93e37cc18f089f61eb912\$lut for cells of type $lut.
Using template $paramod$fad2b54382032712435f6c9e0629a0976ef01981\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11100000 for cells of type $lut.
Using template $paramod$2c4c7dfdf674b9c90d6c2cae622d527a6d7d0c22\$lut for cells of type $lut.
Using template $paramod$bde4e8537033f94d8f9a80f8a1fb04d33f330a83\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01000001 for cells of type $lut.
Using template $paramod$90211918a84e1cef3407e0f8e61fa8260d248e82\$lut for cells of type $lut.
Using template $paramod$8c24dc0cdd336b7fb88bbf7eed45cec5cbae862b\$lut for cells of type $lut.
Using template $paramod$0a94662b0161fc067fc2a1123fd5ac94da2ec1db\$lut for cells of type $lut.
Using template $paramod$4972722c284f07fee673f7cb99e6a36ce4a244f0\$lut for cells of type $lut.
Using template $paramod$59c595af41d4a5cce2d588c3a5f1342749ce7a77\$lut for cells of type $lut.
Using template $paramod$f63fe32f78d5f3c5de711945c592c8c5ec2303ae\$lut for cells of type $lut.
Using template $paramod$4da2782c2e024b3eded45331a6607870b9d0254f\$lut for cells of type $lut.
Using template $paramod$7fcc2f13195f27c397064377984d87a90c06749d\$lut for cells of type $lut.
Using template $paramod$0f52647588235a7349ddd3f3432c9ac1e33ad9e1\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11110100 for cells of type $lut.
Using template $paramod$e70acce3b2b2cd085ae6f11a282551c43c21b69e\$lut for cells of type $lut.
Using template $paramod$b24e6228fb4bec0aa33a0521d4a5735e49a03805\$lut for cells of type $lut.
Using template $paramod$608f40069c27841a5b3bdf03643a34bdc8974072\$lut for cells of type $lut.
Using template $paramod$a92462f953f33d474b573652bc1f4917d5172a4a\$lut for cells of type $lut.
Using template $paramod$05f19d9c2311a3d1ab38ece311a1bb9f96c62043\$lut for cells of type $lut.
Using template $paramod$99a2a175d178a040bb1ffceb53184fb0f59423c6\$lut for cells of type $lut.
Using template $paramod$179512a187da069f3b79ef6612a41e494e7d54b6\$lut for cells of type $lut.
Using template $paramod$97d47401ff94287287892cb5c2bf49d5675bcb00\$lut for cells of type $lut.
Using template $paramod$62eb5dde232c3c093e91cb23ae88e58b1968f3fe\$lut for cells of type $lut.
Using template $paramod$e88e45cab078accc5689b2ac282eac180f40cc61\$lut for cells of type $lut.
Using template $paramod$9cd4f6a6d64e3870959ff871a96b6386fd8df99d\$lut for cells of type $lut.
Using template $paramod$f9cd8239db384bbc4434559d42514064174ba0b1\$lut for cells of type $lut.
Using template $paramod$9f135fba3de3ba24cef5852dbc0be35267668f2e\$lut for cells of type $lut.
Using template $paramod$51307cdec77060d17363ea3d60427c9afef1ddc2\$lut for cells of type $lut.
Using template $paramod$4b2297966ddb718657b80566604f97685ffc0120\$lut for cells of type $lut.
Using template $paramod$a8b2b0f3a3fd7b01c99e8d61bb72f602bd41af54\$lut for cells of type $lut.
Using template $paramod$6382f7860648fdb6f8a8dc690c25a62882cc501b\$lut for cells of type $lut.
Using template $paramod$81d8a60fd95b1a9f9ef71c12a774ae6988cb9fd5\$lut for cells of type $lut.
Using template $paramod$35997c536369812340288d422dd4ce647d1e268d\$lut for cells of type $lut.
Using template $paramod$22295481aee48631dc0088cef4e5f102b07c1986\$lut for cells of type $lut.
Using template $paramod$b4d0f4738a5ce50c7f36c2aa2ecc09cfb874f2b6\$lut for cells of type $lut.
Using template $paramod$c471af5667a682bd131a5b479e58e470d1b2b7cd\$lut for cells of type $lut.
Using template $paramod$385558977b52e93079e68f56ff02a6d071b20563\$lut for cells of type $lut.
Using template $paramod$780375c9bd4a74671d040f17582de38f90afbb3c\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00110101 for cells of type $lut.
Using template $paramod$cbfd30b70b4f0ac8dd1d3ed758215fbf49783a3b\$lut for cells of type $lut.
Using template $paramod$1b24100b2fd4c673c0fb73caa29fa7c0e2a28808\$lut for cells of type $lut.
Using template $paramod$28022358c3dd55ded2bbae3ce855aba2147d0d84\$lut for cells of type $lut.
Using template $paramod$93a7470b6c4912aacc2819167a6b19d866af5092\$lut for cells of type $lut.
Using template $paramod$2d8ecce5c907513cebcd38ab5efe0fc26fc03464\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10100011 for cells of type $lut.
Using template $paramod$19ec49f31a8d230a567aa44ce3ea81a03c101e2b\$lut for cells of type $lut.
Using template $paramod$d6cf0a4b6f6ccd87588da28c41b5b6c258da2509\$lut for cells of type $lut.
Using template $paramod$ab8bb87959c5d7cfa27886cee1355b38e054a61a\$lut for cells of type $lut.
Using template $paramod$4c3450c4cdb3f12897cacd3e7ccefa9d3374c976\$lut for cells of type $lut.
Using template $paramod$354963f344f28132afd8c5fdfca027604bbcf00f\$lut for cells of type $lut.
Using template $paramod$a2d691ba21e093558f2a36669ee489fbccffbcd3\$lut for cells of type $lut.
Using template $paramod$557e338c16bbb0d90fd8781bd3b221ffd2cbf9f3\$lut for cells of type $lut.
Using template $paramod$baa939b0bd5b3e0c8760492528669bd58f640542\$lut for cells of type $lut.
Using template $paramod$1673286b2d22164567ed07266dbb6815c0416063\$lut for cells of type $lut.
Using template $paramod$c40963658d1399a7559864a656bf501f62908440\$lut for cells of type $lut.
Using template $paramod$92058fda35ac450c50b44d851880941017a66742\$lut for cells of type $lut.
Using template $paramod$ac04ff03a39c283686ff0be7afc4e95ad7fd9e6d\$lut for cells of type $lut.
Using template $paramod$4da6fe9957da309dc16b8f31a6b80b19c05c808d\$lut for cells of type $lut.
Using template $paramod$933f4f3e373a784da64d137def3625bdd36d1695\$lut for cells of type $lut.
Using template $paramod$12e9049d8709286a770fe60b59ec4d94c39ce3c9\$lut for cells of type $lut.
Using template $paramod$f38f61a2b590c0027aa4d15c9c7892ea91082529\$lut for cells of type $lut.
Using template $paramod$0238492d2387673ad559bce82853af77e9118b1e\$lut for cells of type $lut.
Using template $paramod$175104ad114973f30397e1a69eae08cff730fc58\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01100000 for cells of type $lut.
Using template $paramod$56f476ed86e5b9a24bad922d591da66d2f60041c\$lut for cells of type $lut.
Using template $paramod$2f973223a91597ac090a4aa4faa92e70bbea27b6\$lut for cells of type $lut.
Using template $paramod$7d791c2363f4f019348f93a148b2a44b4ba6b5b3\$lut for cells of type $lut.
Using template $paramod$3eb606ceffe75d1755522fdffa879e060c1fc53b\$lut for cells of type $lut.
Using template $paramod$8b24407096beec47292ddeb1567a058197a320b9\$lut for cells of type $lut.
Using template $paramod$5a621b016c894274d07edef48c49b401a15fd796\$lut for cells of type $lut.
Using template $paramod$a20c6c1e16699890aacd2a27aa974a524fce88da\$lut for cells of type $lut.
Using template $paramod$c1a19a87ccbbb03d43a72335db63f692ddf82cc1\$lut for cells of type $lut.
Using template $paramod$ea0faad69a26c91786a25961ea149d0e0961eb1f\$lut for cells of type $lut.
Using template $paramod$ed10455c824c2a3761aabdeb1e31dad905f66e6e\$lut for cells of type $lut.
Using template $paramod$ac25621c50068e1059ec4a49f43979f51fae4613\$lut for cells of type $lut.
Using template $paramod$37554b5c329262092c6863b780b571e986624220\$lut for cells of type $lut.
Using template $paramod$fc5041f3f7485fc128fb9aa93b419131eff3c61d\$lut for cells of type $lut.
Using template $paramod$a0db1f257da4f8d5c19a10ce47bab3c33847179b\$lut for cells of type $lut.
Using template $paramod$60e62f639eb8b38ab4a2bf9b15401732043a4a20\$lut for cells of type $lut.
Using template $paramod$52b0f43ae6cb52b5e726dd3244952f6f33bb5f19\$lut for cells of type $lut.
Using template $paramod$a50be0e6fa3a01511bb234559cb74fb8bd3e2061\$lut for cells of type $lut.
Using template $paramod$bfebc1c25844923b9cb323d3ddbd0efc3d746682\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'00001110 for cells of type $lut.
Using template $paramod$fc318a7df7fe07fd6e06d67fcbc358e9823ea389\$lut for cells of type $lut.
Using template $paramod$b4d59a169df3392cc49f75ff3f36786eb368b5e7\$lut for cells of type $lut.
Using template $paramod$00483f3a12115da9272e02fbe057933b9cf7471f\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01111100 for cells of type $lut.
Using template $paramod$2f99e7dde0142f5eb4336d05fd90a596d3f2e038\$lut for cells of type $lut.
Using template $paramod$fd904e9e35cfd343a9df248824bd3f1408724879\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010100 for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101000 for cells of type $lut.
Using template $paramod$d4fae2c0d9ad2966369cd4e39b81c71bcd1327c9\$lut for cells of type $lut.
Using template $paramod$fd2847bd008edd03070f42355fdb14fda0191818\$lut for cells of type $lut.
Using template $paramod$096a408fd37568b92eea484c5cc9a8e86ab67a87\$lut for cells of type $lut.
Using template $paramod$2d07c1a6c53c7b878509360922c4fa5ebedc3011\$lut for cells of type $lut.
Using template $paramod$82b4a585d1edcb5c6e755dc9bd3392228a1c1304\$lut for cells of type $lut.
Using template $paramod$acaf438e6f4f31b5725b67e171b88692c75d36a3\$lut for cells of type $lut.
Using template $paramod$9140e8778d70c73267d16a31702cb8bf43684a0c\$lut for cells of type $lut.
Using template $paramod$b4f85a6321a00b090afc4e21d68e7b99eb94d149\$lut for cells of type $lut.
Using template $paramod$7e0277340d3f34d16bb7c3938d5c21ff955fcc9d\$lut for cells of type $lut.
Using template $paramod$2ea69c779d6c1b79ac5a87b0d1523c67d5628dba\$lut for cells of type $lut.
Using template $paramod$38f9bf4dd2329347b8471f0a98443dd323386889\$lut for cells of type $lut.
Using template $paramod$f54c0ffd7b041ca43eac7710ab19c0666d826c22\$lut for cells of type $lut.
Using template $paramod$7a9d9396461df152f697894fa3b294ad1b285e08\$lut for cells of type $lut.
Using template $paramod$1cfadde4781a0fb6b2920d4cd4458637fb668bc5\$lut for cells of type $lut.
Using template $paramod$0de052767abdccc3aefc818722bdc3c7850d25d6\$lut for cells of type $lut.
Using template $paramod$adac5163f2ca606e303e4fcb6e4ac1a8cfe9825d\$lut for cells of type $lut.
Using template $paramod$fb5ee0bdef1c4e74aaf1fd8efae98b46a2f5e564\$lut for cells of type $lut.
Using template $paramod$ad86cb7e971524b41c3cbfbe7186c4e8b43b7859\$lut for cells of type $lut.
Using template $paramod$b4410865e8124402796f9dfbf73ef8d279fdbd08\$lut for cells of type $lut.
Using template $paramod$d53578aacfd93124244778d88be0e90eb09c1b1b\$lut for cells of type $lut.
Using template $paramod$703a13a751e631ef123f38f7d2125aeabec0f94c\$lut for cells of type $lut.
Using template $paramod$e5e9da8fed769f971686eed8c5eea50e61f73aaa\$lut for cells of type $lut.
Using template $paramod$1df41e75d8c1af4127c594b13f60ff058fd64e7e\$lut for cells of type $lut.
Using template $paramod$b2a4860cd839ff40d9dca4c3f237b2b534267028\$lut for cells of type $lut.
Using template $paramod$044e8b1893c94f717651c5cd428e71c892566f52\$lut for cells of type $lut.
Using template $paramod$6d23198eb2b8f79a41c7626605a61009695893b1\$lut for cells of type $lut.
Using template $paramod$45d617c2ce0041e27b541f62b0fc3c3ce441a616\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'01011100 for cells of type $lut.
Using template $paramod$d119410bab96963da0139669592048db2c09198b\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10111111 for cells of type $lut.
Using template $paramod$62f6ec4235bf971942cc23ec48b54028446d4b76\$lut for cells of type $lut.
Using template $paramod$1843b3c15f2447d117e2d5de9b00f791ef5f9fa3\$lut for cells of type $lut.
Using template $paramod$048d4aa2263b685fba6c6b0d38f6224df0dc3042\$lut for cells of type $lut.
Using template $paramod$50666a8f9d622ca1f027a4587dfd5f2a7d8810c9\$lut for cells of type $lut.
Using template $paramod$64669a7e87c28e39425dffff48145545533b4971\$lut for cells of type $lut.
Using template $paramod$fe9a0158d0352193457c4f5b6282ac86d35fb3ee\$lut for cells of type $lut.
Using template $paramod$fceb3a526de44b8f6b38e567360f59f7cf5878fb\$lut for cells of type $lut.
Using template $paramod$e86317a9023eff51a4e4c6c0e944145b111aea45\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11010011 for cells of type $lut.
Using template $paramod$a15fd389a2f54cb7b94707b25934d226e68d9e2e\$lut for cells of type $lut.
Using template $paramod$48fa0c3f7801e679a29a5497f006a07f72fab5f7\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'10001111 for cells of type $lut.
Using template $paramod$cde3aa23c1efa60a470cf0f0281347d6ba585afa\$lut for cells of type $lut.
Using template $paramod$71cb81cd7ec213b39129c5f3867d1aa22dffde1b\$lut for cells of type $lut.
Using template $paramod$d35161d1d7976dcc02e7c7d51172431be85143b4\$lut for cells of type $lut.
Using template $paramod\$lut\WIDTH=32'00000000000000000000000000000011\LUT=8'11101111 for cells of type $lut.
Using template $paramod$8a5a8b5c9249ecf7f5ca78064405f54302e0a76b\$lut for cells of type $lut.
Using template $paramod$d6d3aaeac1b9aa2c4b652c48e0deb565040dda72\$lut for cells of type $lut.
Using template $paramod$f9b715fbf1040e81e900b2461c2390d17ed5e988\$lut for cells of type $lut.
Using template $paramod$ee144edd7e4e2a1c095bdb84491744d6b6557171\$lut for cells of type $lut.
Using template $paramod$f9ade28f1669c608093cfc771d07571aec15660d\$lut for cells of type $lut.
Using template $paramod$57f86e5e84c6b4e2c2690a842275a70ba70245aa\$lut for cells of type $lut.
Using template $paramod$fe5dc46a592bce6d002f4e3f8fe58f02a6331ec7\$lut for cells of type $lut.
Using template $paramod$bb4fff1cc3b827238aa40993cafede1c5beecbe3\$lut for cells of type $lut.
Using template $paramod$cc08dba3aac8677e797984bdf18a09dd37547dd3\$lut for cells of type $lut.
Using template $paramod$f372bf1b294e01fd043eb05a6280cd9dfb6e2e04\$lut for cells of type $lut.
Using template $paramod$17679853897ac975b59db151d6ec7f3e1022d662\$lut for cells of type $lut.
Using template $paramod$46c9e32281c03a20bf05d89a087eb83a9b8c4fcd\$lut for cells of type $lut.
Using template $paramod$57f71a429a5de468266cb6ec0f5d054c9415f3b9\$lut for cells of type $lut.
Using template $paramod$ceeb45bdd6c300a6df87f1c45b8348109858185a\$lut for cells of type $lut.
No more expansions possible.
<suppressed ~4528 debug messages>
Removed 0 unused cells and 3184 unused wires.

18.42. Executing AUTONAME pass.
Renamed 302 objects in module ALUControl (19 iterations).
Renamed 501 objects in module ForwardingUnit (14 iterations).
Renamed 95 objects in module adder (3 iterations).
Renamed 16154 objects in module alu (45 iterations).
Renamed 3 objects in module branch_decision (2 iterations).
Renamed 174 objects in module branch_predictor (5 iterations).
Renamed 4796 objects in module cache (34 iterations).
Renamed 16 objects in module control (4 iterations).
Renamed 3 objects in module cpu_v2 (2 iterations).
Renamed 8 objects in module csr_file (2 iterations).
Renamed 155 objects in module ex_mem (2 iterations).
Renamed 178 objects in module id_ex (2 iterations).
Renamed 64 objects in module if_id (2 iterations).
Renamed 141 objects in module imm_gen (10 iterations).
Renamed 117 objects in module mem_wb (2 iterations).
Renamed 32 objects in module mux2to1 (2 iterations).
Renamed 32 objects in module program_counter (2 iterations).
Renamed 238 objects in module regfile (10 iterations).
Renamed 4 objects in module sign_mask_gen (2 iterations).
Renamed 1 objects in module top (2 iterations).
<suppressed ~2757 debug messages>

18.43. Executing HIERARCHY pass (managing design hierarchy).

18.43.1. Analyzing design hierarchy..
Top module:  \top
Used module:     \cache
Used module:     \cpu_v2
Used module:         \csr_file
Used module:         \program_counter
Used module:         \mux2to1
Used module:         \adder
Used module:         \ALUControl
Used module:         \alu
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         \control
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen

18.43.2. Analyzing design hierarchy..
Top module:  \top
Used module:     \cache
Used module:     \cpu_v2
Used module:         \csr_file
Used module:         \program_counter
Used module:         \mux2to1
Used module:         \adder
Used module:         \ALUControl
Used module:         \alu
Used module:         \branch_decision
Used module:         \branch_predictor
Used module:         \control
Used module:         \ex_mem
Used module:         \ForwardingUnit
Used module:         \id_ex
Used module:         \if_id
Used module:         \imm_gen
Used module:         \mem_wb
Used module:         \regfile
Used module:         \sign_mask_gen
Removed 0 unused modules.

18.44. Printing statistics.

=== ALUControl ===

   Number of wires:                 22
   Number of wire bits:             87
   Number of public wires:          22
   Number of public wire bits:      87
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     SB_LUT4                        35

=== ForwardingUnit ===

   Number of wires:                 38
   Number of wire bits:            150
   Number of public wires:          38
   Number of public wire bits:     150
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     SB_LUT4                        60

=== adder ===

   Number of wires:                  4
   Number of wire bits:            128
   Number of public wires:           4
   Number of public wire bits:     128
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 63
     SB_CARRY                       31
     SB_LUT4                        32

=== alu ===

   Number of wires:                267
   Number of wire bits:           1275
   Number of public wires:         267
   Number of public wire bits:    1275
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                724
     SB_CARRY                       95
     SB_LUT4                       629

=== branch_decision ===

   Number of wires:                  7
   Number of wire bits:              7
   Number of public wires:           7
   Number of public wire bits:       7
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  3
     SB_LUT4                         3

=== branch_predictor ===

   Number of wires:                 13
   Number of wire bits:            138
   Number of public wires:          13
   Number of public wire bits:     138
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 69
     SB_CARRY                       31
     SB_DFFE                         2
     SB_DFFN                         1
     SB_LUT4                        35

=== cache ===

   Number of wires:               4324
   Number of wire bits:         132326
   Number of public wires:        4324
   Number of public wire bits:  132326
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                494
     SB_DFFE                        90
     SB_DFFESR                       2
     SB_DFFESS                       1
     SB_LUT4                       399
     SB_SPRAM256KA                   2

=== control ===

   Number of wires:                 14
   Number of wire bits:             21
   Number of public wires:          14
   Number of public wire bits:      21
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 13
     SB_LUT4                        13

=== cpu_v2 ===

   Number of wires:                 72
   Number of wire bits:           1772
   Number of public wires:          72
   Number of public wire bits:    1772
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 44
     ALUControl                      1
     ForwardingUnit                  1
     SB_LUT4                         3
     adder                           2
     alu                             1
     branch_decision                 1
     branch_predictor                1
     control                         1
     csr_file                        1
     ex_mem                          1
     id_ex                           1
     if_id                           1
     imm_gen                         1
     mem_wb                          1
     mux2to1                        24
     program_counter                 1
     regfile                         1
     sign_mask_gen                   1

=== csr_file ===

   Number of wires:                 14
   Number of wire bits:            218
   Number of public wires:          14
   Number of public wire bits:     218
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  8
     SB_RAM40_4K                     8

=== ex_mem ===

   Number of wires:                  3
   Number of wire bits:            311
   Number of public wires:           3
   Number of public wire bits:     311
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                155
     SB_DFF                        155

=== id_ex ===

   Number of wires:                  3
   Number of wire bits:            357
   Number of public wires:           3
   Number of public wire bits:     357
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                178
     SB_DFF                        178

=== if_id ===

   Number of wires:                  3
   Number of wire bits:            129
   Number of public wires:           3
   Number of public wire bits:     129
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 64
     SB_DFF                         64

=== imm_gen ===

   Number of wires:                 18
   Number of wire bits:            121
   Number of public wires:          18
   Number of public wire bits:     121
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 52
     SB_LUT4                        52

=== mem_wb ===

   Number of wires:                  3
   Number of wire bits:            235
   Number of public wires:           3
   Number of public wire bits:     235
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                117
     SB_DFF                        117

=== mux2to1 ===

   Number of wires:                  4
   Number of wire bits:             97
   Number of public wires:           4
   Number of public wire bits:      97
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     SB_LUT4                        32

=== program_counter ===

   Number of wires:                  3
   Number of wire bits:             65
   Number of public wires:           3
   Number of public wire bits:      65
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 32
     SB_DFF                         32

=== regfile ===

   Number of wires:                 24
   Number of wire bits:            253
   Number of public wires:          24
   Number of public wire bits:     253
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                133
     SB_DFF                         48
     SB_LUT4                        81
     SB_RAM40_4K                     4

=== sign_mask_gen ===

   Number of wires:                  3
   Number of wire bits:             10
   Number of public wires:           3
   Number of public wire bits:      10
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     SB_LUT4                         4

=== top ===

   Number of wires:                 14
   Number of wire bits:            179
   Number of public wires:          14
   Number of public wire bits:     179
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  4
     SB_HFOSC                        1
     SB_LUT4                         1
     cache                           1
     cpu_v2                          1

=== design hierarchy ===

   top                               1
     cache                           1
     cpu_v2                          1
       ALUControl                    1
       ForwardingUnit                1
       adder                         2
       alu                           1
       branch_decision               1
       branch_predictor              1
       control                       1
       csr_file                      1
       ex_mem                        1
       id_ex                         1
       if_id                         1
       imm_gen                       1
       mem_wb                        1
       mux2to1                      24
       program_counter               1
       regfile                       1
       sign_mask_gen                 1

   Number of wires:               4949
   Number of wire bits:         140238
   Number of public wires:        4949
   Number of public wire bits:  140238
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               3040
     SB_CARRY                      188
     SB_DFF                        594
     SB_DFFE                        92
     SB_DFFESR                       2
     SB_DFFESS                       1
     SB_DFFN                         1
     SB_HFOSC                        1
     SB_LUT4                      2147
     SB_RAM40_4K                    12
     SB_SPRAM256KA                   2

18.45. Executing CHECK pass (checking for obvious problems).
Checking module ALUControl...
Checking module ForwardingUnit...
Checking module adder...
Checking module alu...
Checking module branch_decision...
Checking module branch_predictor...
Checking module cache...
Checking module control...
Checking module cpu_v2...
Checking module csr_file...
Checking module ex_mem...
Checking module id_ex...
Checking module if_id...
Checking module imm_gen...
Checking module mem_wb...
Checking module mux2to1...
Checking module program_counter...
Checking module regfile...
Checking module sign_mask_gen...
Checking module top...
Found and reported 0 problems.

18.46. Executing BLIF backend.

19. Executing JSON backend.

Warnings: 2 unique messages, 2 total
End of script. Logfile hash: 3974ea7cc9, CPU: user 10.09s system 0.88s, MEM: 248.71 MB peak
Yosys 0.9+4052 (git sha1 44520808, clang  -fPIC -Os)
Time spent: 19% 1x abc (2 sec), 17% 24x opt_clean (2 sec), ...